events {}

http {
    # Define rate limiting for the API
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # HTTP server block to redirect traffic to HTTPS
    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server block with SSL/TLS configuration
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL/TLS certificate configuration
        ssl_certificate /etc/nginx/certs/certificate.crt;
        ssl_certificate_key /etc/nginx/certs/private.key;

        ssl_protocols TLSv1.2 TLSv1.3; # Restrict protocols to secure versions
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Route to Next.js front-end
        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            add_header Cache-Control "public, max-age=86400";
        }

        # Route API requests to Flask back-end
        location /api/ {
            proxy_pass http://backend:5000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Route to the specific `/realmetrics` endpoint on the back-end
        location /realmetrics {
            proxy_pass http://backend:5000/realmetrics;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            limit_req zone=api burst=5;
        }
    }
}